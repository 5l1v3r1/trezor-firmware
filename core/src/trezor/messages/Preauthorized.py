# Automatically generated by pb2py
# fmt: off
import protobuf as p

from .GetOwnershipProof import GetOwnershipProof
from .SignTx import SignTx

if __debug__:
    try:
        from typing import Dict, List  # noqa: F401
        from typing_extensions import Literal  # noqa: F401
    except ImportError:
        pass


class Preauthorized(p.MessageType):
    MESSAGE_WIRE_TYPE = 52

    def __init__(
        self,
        sign_tx: SignTx = None,
        get_ownership_proof: GetOwnershipProof = None,
    ) -> None:
        self.sign_tx = sign_tx
        self.get_ownership_proof = get_ownership_proof

    @classmethod
    def get_fields(cls) -> Dict:
        return {
            1: ('sign_tx', SignTx, 0),
            2: ('get_ownership_proof', GetOwnershipProof, 0),
        }
