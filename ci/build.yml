image: registry.gitlab.com/satoshilabs/trezor/trezor-firmware/trezor-firmware-env.nix

variables:
  SDL_VIDEODRIVER: "dummy"
  XDG_RUNTIME_DIR: "/var/tmp"

# Core

#core fw regular build:
#  stage: build
#  needs: []
#  script:
#    - nix-shell --run "pipenv run make -C core build_boardloader"
#    - nix-shell --run "pipenv run make -C core build_bootloader"
#    - nix-shell --run "pipenv run make -C core build_prodtest"
#    - nix-shell --run "pipenv run make -C core build_firmware"
#    - nix-shell --run "pipenv run make -C core sizecheck"
#    - cp core/build/firmware/firmware.bin trezor-fw-regular-$CORE_VERSION-$CI_COMMIT_SHORT_SHA.bin
#  artifacts:
#    name: "$CI_JOB_NAME-$CI_COMMIT_SHORT_SHA"
#    paths:
#    - trezor-fw-regular-*.*.*-$CI_COMMIT_SHORT_SHA.bin
#    expire_in: 1 week
#
#core fw regular debug build:
#  stage: build
#  needs: []
#  script:
#    - nix-shell --run "PYOPT=0 pipenv run make -C core build_firmware"
#    - cp core/build/firmware/firmware.bin trezor-fw-regular-debug-$CORE_VERSION-$CI_COMMIT_SHORT_SHA.bin
#  artifacts:
#    name: "$CI_JOB_NAME-$CI_COMMIT_SHORT_SHA"
#    paths:
#    - trezor-fw-regular-debug-*.*.*-$CI_COMMIT_SHORT_SHA.bin
#    expire_in: 1 week
#
#core fw btconly build:
#  stage: build
#  needs: []
#  variables:
#    BITCOIN_ONLY: "1"
#  script:
#    - nix-shell --run "pipenv run make -C core build_firmware"
#    - mv core/build/firmware/firmware.bin core/build/firmware/firmware-bitcoinonly.bin
#    - nix-shell --run "pipenv run ./tools/check-bitcoin-only core/build/firmware/firmware-bitcoinonly.bin"
#    - cp core/build/firmware/firmware-bitcoinonly.bin trezor-fw-btconly-$CORE_VERSION-$CI_COMMIT_SHORT_SHA.bin
#  artifacts:
#    name: "$CI_JOB_NAME-$CI_COMMIT_SHORT_SHA"
#    paths:
#    - trezor-fw-btconly-*.*.*-$CI_COMMIT_SHORT_SHA.bin
#    expire_in: 1 week
#
#core fw btconly t1 build:
#  stage: build
#  needs: []
#  variables:
#    BITCOIN_ONLY: "1"
#    TREZOR_MODEL: "1"
#  script:
#    - nix-shell --run "pipenv run make -C core build_firmware"
#    - cp core/build/firmware/firmware.bin trezor-fw-btconly-t1-$CORE_VERSION-$CI_COMMIT_SHORT_SHA.bin
#  artifacts:
#    name: "$CI_JOB_NAME-$CI_COMMIT_SHORT_SHA"
#    paths:
#    - trezor-fw-btconly-t1-*.*.*-$CI_COMMIT_SHORT_SHA.bin
#    expire_in: 1 week
#
#core unix regular build:
#  stage: build
#  needs: []
#  script:
#    - nix-shell --run "pipenv run make -C core build_unix"
#  artifacts:
#    name: "$CI_JOB_NAME-$CI_COMMIT_SHORT_SHA"
#    paths:
#    - core/build/unix/trezor-emu-core
#    - core/src/trezor/res/resources.py
#    expire_in: 1 week
#
#core unix frozen regular build:
#  stage: build
#  needs: []
#  script:
#    - nix-shell --run "pipenv run make -C core build_unix_frozen"
#  artifacts:
#    name: "$CI_JOB_NAME-$CI_COMMIT_SHORT_SHA"
#    paths:
#    - core/build/unix/trezor-emu-core
#    expire_in: 1 week
#
#core unix frozen btconly debug build:
#  stage: build
#  needs: []
#  variables:
#    PYOPT: "0"
#    BITCOIN_ONLY: "1"
#  script:
#    - nix-shell --run "pipenv run make -C core build_unix_frozen"
#    - mv core/build/unix/trezor-emu-core core/build/unix/trezor-emu-core-bitcoinonly
#  artifacts:
#    name: "$CI_JOB_NAME-$CI_COMMIT_SHORT_SHA"
#    paths:
#    - core/build/unix/trezor-emu-core-bitcoinonly
#    expire_in: 1 week
#
#core unix frozen debug build:
#  stage: build
#  needs: []
#  variables:
#    PYOPT: "0"
#  script:
#    - nix-shell --run "pipenv run make -C core build_unix_frozen"
#  artifacts:
#    name: "$CI_JOB_NAME-$CI_COMMIT_SHORT_SHA"
#    untracked: true
#    expire_in: 1 week

core macos frozen regular build:
  stage: build
  needs: []
  tags:
    - darwin
#  when: manual
  script:
    - system_profiler SPSoftwareDataType
    - nix-shell --run "pipenv run make -C core build_unix_frozen"
    - export NAME="trezor"
    - mkdir -p $NAME.app/Contents/{MacOS,libs}
    - cp -v core/build/unix/trezor-emu-core $NAME.app/Contents/MacOS/$NAME
    - chmod +x $NAME.app/Contents/MacOS/$NAME
    - dylibbundler -of -b -i /usr/lib/system -d $NAME.app/Contents/libs -x $NAME.app/Contents/MacOS/$NAME
    - echo "\$BASH_SOURCE/../$NAME.app/Contents/MacOS/$NAME" > run.command
    - chmod u+x run.command
  allow_failure: true
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_SHORT_SHA"
    paths:
      - trezor.app
      - run.command
    expire_in: 1 week
#
#legacy emu regular build:
#  stage: build
#  needs: []
#  variables:
#    DEBUG_LINK: "1"
#    EMULATOR: "1"
#  script:
#    - nix-shell --run "pipenv run legacy/script/cibuild"
#  artifacts:
#    name: "$CI_JOB_NAME-$CI_COMMIT_SHORT_SHA"
#    paths:
#    - legacy/firmware/trezor.elf
#    expire_in: 1 week
#
#legacy emu btconly build:
#  stage: build
#  needs: []
#  variables:
#    BITCOIN_ONLY: "1"
#    DEBUG_LINK: "1"
#    EMULATOR: "1"
#  script:
#    - nix-shell --run "pipenv run legacy/script/cibuild"
#    - mv legacy/firmware/trezor.elf legacy/firmware/trezor-bitcoinonly.elf
#  artifacts:
#    name: "$CI_JOB_NAME-$CI_COMMIT_SHORT_SHA"
#    paths:
#    - legacy/firmware/trezor-bitcoinonly.elf
#    expire_in: 1 week
